// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopOrderSystem.Data;

#nullable disable

namespace ShopOrderSystem.Migrations
{
    [DbContext(typeof(ShopOrderSystemDbContext))]
    partial class ShopOrderSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            FullName = "Иванов Иван Иванович",
                            IsDeleted = false,
                            Phone = "+1234567890"
                        },
                        new
                        {
                            CustomerId = 2,
                            FullName = "Петров Петр Петрович",
                            IsDeleted = false,
                            Phone = "+0987654321"
                        },
                        new
                        {
                            CustomerId = 3,
                            FullName = "Сидоров Сидор Сидорович",
                            IsDeleted = false,
                            Phone = "+1112223333"
                        },
                        new
                        {
                            CustomerId = 4,
                            FullName = "Кузнецова Анастасия Михайловна",
                            IsDeleted = false,
                            Phone = "+5556667777"
                        },
                        new
                        {
                            CustomerId = 5,
                            FullName = "Смирнов Алексей Сергеевич",
                            IsDeleted = false,
                            Phone = "+8889990000"
                        });
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 5, 9, 16, 44, 57, 480, DateTimeKind.Local).AddTicks(1494)
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 2,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 5, 14, 16, 44, 57, 480, DateTimeKind.Local).AddTicks(1511)
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = 3,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 5, 16, 16, 44, 57, 480, DateTimeKind.Local).AddTicks(1513)
                        },
                        new
                        {
                            OrderId = 4,
                            CustomerId = 4,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 5, 17, 16, 44, 57, 480, DateTimeKind.Local).AddTicks(1514)
                        },
                        new
                        {
                            OrderId = 5,
                            CustomerId = 5,
                            IsDeleted = false,
                            OrderDate = new DateTime(2024, 5, 18, 16, 44, 57, 480, DateTimeKind.Local).AddTicks(1515)
                        });
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 5,
                            ProductId = 5
                        });
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.OrderItemDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId")
                        .IsUnique();

                    b.ToTable("OrderItemDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderItemId = 1,
                            Price = 500f,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            OrderItemId = 2,
                            Price = 20f,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3,
                            OrderItemId = 3,
                            Price = 1000f,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            OrderItemId = 4,
                            Price = 30f,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 5,
                            OrderItemId = 5,
                            Price = 50f,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            AvailableQuantity = 10,
                            IsDeleted = false,
                            Price = 500f,
                            ProductName = "Смартфон",
                            ProductTypeId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            AvailableQuantity = 50,
                            IsDeleted = false,
                            Price = 20f,
                            ProductName = "Футболка",
                            ProductTypeId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            AvailableQuantity = 5,
                            IsDeleted = false,
                            Price = 1000f,
                            ProductName = "Холодильник",
                            ProductTypeId = 3
                        },
                        new
                        {
                            ProductId = 4,
                            AvailableQuantity = 20,
                            IsDeleted = false,
                            Price = 30f,
                            ProductName = "Крем для лица",
                            ProductTypeId = 4
                        },
                        new
                        {
                            ProductId = 5,
                            AvailableQuantity = 30,
                            IsDeleted = false,
                            Price = 50f,
                            ProductName = "Конструктор LEGO",
                            ProductTypeId = 5
                        });
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductTypeId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            ProductTypeId = 1,
                            IsDeleted = false,
                            TypeName = "Электроника"
                        },
                        new
                        {
                            ProductTypeId = 2,
                            IsDeleted = false,
                            TypeName = "Одежда"
                        },
                        new
                        {
                            ProductTypeId = 3,
                            IsDeleted = false,
                            TypeName = "Бытовая техника"
                        },
                        new
                        {
                            ProductTypeId = 4,
                            IsDeleted = false,
                            TypeName = "Косметика"
                        },
                        new
                        {
                            ProductTypeId = 5,
                            IsDeleted = false,
                            TypeName = "Игрушки"
                        });
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.Order", b =>
                {
                    b.HasOne("ShopOrderSystem.Models.DatabaseModels.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.OrderItem", b =>
                {
                    b.HasOne("ShopOrderSystem.Models.DatabaseModels.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopOrderSystem.Models.DatabaseModels.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.OrderItemDetail", b =>
                {
                    b.HasOne("ShopOrderSystem.Models.DatabaseModels.OrderItem", "OrderItem")
                        .WithOne("OrderItemDetail")
                        .HasForeignKey("ShopOrderSystem.Models.DatabaseModels.OrderItemDetail", "OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.Product", b =>
                {
                    b.HasOne("ShopOrderSystem.Models.DatabaseModels.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.OrderItem", b =>
                {
                    b.Navigation("OrderItemDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.Product", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ShopOrderSystem.Models.DatabaseModels.ProductType", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
